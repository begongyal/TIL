[Apache]

lightsail에서 웹 서버를 구동하는 방법.
Apache 웹 서버가 기본으로 설치되어있다.

/etc/apache2/sites-available 디렉토리에
000-default.conf, default-ssl.conf 파일이 있다.

000-default.conf는 http 연결을 위한 conf 파일로, 
들어가보면 80번 포트로 연결되어 있는 걸 볼 수 있고, DocumentRoot는 /var/www/html로 되어있다.
그 경로로 들어가보면 apache2 기본 페이지 html파일이 들어가있다.

default-ssl.conf는 https 연결을 위한 conf 파일로,
들어가보면 000-default.conf 파일엔 없던 IfModule이 있다.(이게 뭔지는 모르겠다.)
그리고 443번 포트로 연결되어 있는 걸 볼 수 있고, DocumentRoot는 /var/www/html로 되어있다.
SSLEngine은 on으로 되어있다. (안되어있다면 SSL 적용할 수 없어서 나중에 적용이 필요할때
https://blogger.pe.kr/824 참고하면 된다고 함.)

둘 다 공통으로 DocumentRoot에는 실행하고 싶은 웹 서비스 파일들(html 등)이 들어있는 디렉토리를 적으면 된다.

우리가 react 등으로 개발한 웹 사이트를 lightsail apache2 웹 서버를 이용해서 배포하고 싶은 경우에는
두 가지 방법이 있다.
A. 000-default.conf의 DocumentRoot를 /var/www/html에서 [build 디렉토리 존재하는 경로] (ex. /var/www/illerbachgi/build/)로 바꿔주고
systemctl apache2 reload를 해주면 된다. (react로 개발했을때는 npm run build 명령어로 build 디렉토리를 만들 수 있음)
B. 혹은 새로 conf 파일을 만들어서 (ex. illerbachgi.conf), 000-default.conf의 내용을 그대로 복사해오고 DocumentRoot만 A방법에서 한것처럼 바꿔주면 된다.
그리고 a2dissite 000-default.conf, a2ensite illerbachgi.conf 의 두 번의 명령어를 입력해서 apache2서버가 사용할 conf파일을 재설정해주고
systemctl apache2 reload로 서버 conf파일을 업데이트한다.
a2ensite 명령어는 /etc/apache2/sites-available에 있는 conf 파일을 /etc/apache2/sites-enabled로 복사하고 항상 동기화시킨다.
그러므로 a2ensite를 한번 해주면, sites-available 안에 있는 conf 파일을 수정한다고 다시 a2ensite 할 필요가 없다. (자동으로 sites-enabled에도 적용됨)
a2dissite 명령어는 sites-enabled에서 conf 파일을 삭제한다.

B 방법을 사용하면 좋은 점은, 다양한 웹 서비스를 개발하였을 때, a2ensite, a2dissite를 이용해서 개발한 웹 서버 소스코드를 삭제하고 복사해오고 할 필요 없이
apache2 웹 서버가 사용할 conf파일만 수정해주면 언제든 서비스를 갈아끼울 수 있다는 것이다.




[Apache2에 SSL 인증서 적용하는 방법(https)]

1. 우리 서버에 ssh로 접속해서 certbot을 설치했다.
sudo apt-get install certbot

2. 웹 루트로 이동해서 certbot을 실행한다. (여기서 웹 루트는 서비스 하고싶은 웹 페이지 소스코드 경로 (ex. /var/www/illerbachgi/build/)를 의미한다.)
cd [web root] -> cd /var/www/illerbachgi/build/
sudo certbot certonly --webroot -w . -d [도메인 주소] -> sudo certbot certonly --webroot -w . -d illerbachgi.com

3. 그러면 이메일을 입력하라고 하고 2번의 확인(A, Y를 순서대로 입력하면 됨)을 거친다.

4. 인증서를 성공적으로 만들었다는 메시지 중간에 fullchain.pem, privkey.pem이 생성된 위치가 나온다.
IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at:
   /etc/letsencrypt/live/illerbachgi.com/fullchain.pem
   Your key file has been saved at:
   /etc/letsencrypt/live/illerbachgi.com/privkey.pem
...

5. 참고링크(https://nhj12311.tistory.com/250)를 가보면 지금까지 만든 pem 파일들을, 웹 서버에 적용하기 위해서 어떤 작업들을 해야하는지 설명이 나와있지만,
nginx 기준으로 쓰여있고, apache2의 경우에는 certbot 홈페이지에 가서 참고하라고 한다. 그러나 우리는 그 방법대로 하지 않고
(왜냐하면 홈페이지에서는 snap으로 애초에 certbot을 설치하라고 했기 때문에 이미 지나버려서.) https://blogger.pe.kr/824의 링크를 참고했다.

6. blogger 참고 링크의 중간부터 이어서 따라했다. /etc/apache2/sites-available/000-default-ssl.conf 를 복사해서 illerbachgi-ssl.conf로 만들어도 되었겠지만,
그냥 그대로 수정하기로 하고 진행했다. conf파일 중간에 SSLEngine이 on으로 되어있는 것을 확인하고, SSLCertificateFile,KeyFile,ChainFile을 링크 내용 그대로
cert.pem, privkey.pem, chain.pem의 경로로 수정해주었다. (fullchain.pem은 실컷 만들어놓고 왜 안쓰는지는 모르겠음) 그리고 a2ensite로 conf파일 사용하도록 해주고
reload하면 적용이 되어있다.

7. Lightsail에서 443 포트를 방화벽에서 열어주었는지도 꼭 확인하자.


[Apache2에 와일드카드 SSL 인증서 적용하는 방법(https)]
위의 내용을 참고해서 아래 링크를 따라하면 되고 구체적인 방법은 다음과 같다.
https://oasisfores.com/letsencrypt-wildcard-ssl-certificate/

certbot 설치는 위에 1번 내용대로 하면되고(아마도. 그리고 지금은 이미 되어있음)
아무튼 begongyal 아이디에 설치가 되어있으므로 접속해서 어떤 디렉토리에서든 상관없이(왜냐면 와일드카드니까)
certbot certonly --manual -d *.example.com -d example.com --preferred-challenges dns
를 입력하라고 한다.
우리로 치면 begongyal 아이디에서
sudo certbot certonly --manual -d *.illerbachgi.com -d illerbachgi.com --preferred-challenges dns
를 입력하는 것.
입력하면 총 2번 우리 도메인에 txt record를 추가하라고 한다.

Please deploy a DNS TXT record under the name
_acme-challenge.illerbachgi.com with the following value:
라고 뜨면서 코드를 알려주면
lightsail에 DNS record추가하는데로 가서 txt 레코드로 record name은 _acme-challenge.illerbachgi.com 넣어주고 
값에다가 코드를 넣으면 된다.
txt record를 추가해도 바로 적용되지는 않으므로 https://toolbox.googleapps.com/apps/dig/#TXT/ 에 가서 적용이 되었는지 확인하고
그 다음에 엔터를 치면 된다.
이 과정을 2번 거치면 알아서 /etc/letsencrypt/live/illerbachgi.com/ 여기 디렉토리 안에 pem keyfile 2개가 갱신됨
그러면 어차피 apache 서버 설정에 keyfile 적용하는건 미리 해뒀으므로
sudo systemctl reload apache2 해주면 적용 완료된다.

참고로 와일드카드 인증서를 맨 처음 발급받으려면 manual 옵션을 통해서 직접 txt record를 추가하는 방식으로 했어야했는데
manual 옵션을 통해서 만든 인증서는 자동 갱신을 허용하지 않는다.
그래서 manually renew를 해줘야하는데, 이거는 let's encrypt가 제공하는 3개월의 유효기간 중에 1달 이내로 남았을때만 가능하다.
위 과정은 그 manually renew하는 과정을 설명한 것이다.
(꼭 renew라고 생각할 필요 없고 그냥 다시 재발급 받는다고 생각하면됨. 3개월의 유효기간을 갖는 새로운 key files로 기존의 것들을 대체하는 것이므로
1달 이내로 남았을때만 가능하다는 말이, 유효기간이 아직 1달 넘게 남았는데 계속 무지성으로 재발급받는것을 못하게 한다는 뜻이지
만료되고나면 또 다른 과정을 거쳐서 발급받아야된다는 말이 아님. 그냥 똑같이 하면됨.)










[SSL 적용 후 http 연결을 모두 https로 돌리는 방법]
현재 http연결로 적용되고 있는 conf 파일(ex. 000-default.conf) 안에 다음과 같은 내용을 추가로 적어준다.
RewriteEngine On
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R,L]

참고: https://oingdaddy.tistory.com/68
(https://blogger.pe.kr/824는 따라하지말것)





[Apache에 테스트 환경 만들기]

리액트 홈페이지를 로컬에서 개발하면 매번 npm run build를 할 필요 없이
npm start를 한 후 변경 사항을 바로바로 확인할 수 있어 편리하지만,
실제로 apache 서버에 올렸을 때에도 잘 작동하는지 확인할 필요가 있다.

하지만 illerbachgi.com은 실제로 서비스되고 있으므로, 테스트 환경이 필요하다.
우리가 가진 서버 컴퓨터는 하나이므로 test.illerbachgi.com으로 요청이 들어오면
apache가 알아서 우리의 테스트 환경으로 연결시켜줄 수 있도록 만들자.

우선 lightsail로 가서 DNS 레코드를 추가한다.
test.illerbachgi.com을 우리의 static ip로 연결시켜줄 a record를 추가한다.
(DNS git 문서 참고)

그리고 /etc/apache2/sites-available로 가서 conf 파일을 수정한다.
현재 443(https)포트를 담당하는 conf 파일인 default-ssl.conf 파일을 연다.
<VirtualHost _default_:443>
~
~
</VirtualHost>
하고 현재 서비스하고 있는 설정이 있을 텐데, 우선 그 아래에 똑같이 VirtualHost 블럭을 만든다. 그리고
ServerName test.illerbachgi.com
DocumentRoot /var/www/test/build
를 추가한다.

WSGI나 SSL 설정은 위를 참고해도 되고, 본 repo에 다른 글을 참고해도 된다.

Q. 새로운 conf 파일 만들어서 a2ensite 하면 안되나요?
> 예를 들어 test.conf를 만들어서 a2ensite 했다고 치자.
   그러면 illerbachgi.com과 test.illerbachgi.com 둘 다 적용이 안되고
   둘 중 하나면 적용이 된다. 한 파일에 다 설정하면 둘 다 적용이 된다.
